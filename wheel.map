
Allocating common symbols
Common symbol       size              file

buddy_num           0x40              build/memory/page_alloc.c.o
buddy_map           0x40              build/memory/page_alloc.c.o
buf                 0x100             build/memory/page_alloc.c.o

Discarded input sections

 .comment       0x0000000000000000       0x4e build/kernel/main.c.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/kernel/main.c.o
 .eh_frame      0x0000000000000000       0xa8 build/kernel/main.c.o
 .comment       0x0000000000000000       0x4e build/memory/page_alloc.c.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/memory/page_alloc.c.o
 .eh_frame      0x0000000000000000       0xc0 build/memory/page_alloc.c.o
 .comment       0x0000000000000000       0x4e build/memory/virt_alloc.c.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/memory/virt_alloc.c.o
 .comment       0x0000000000000000       0x4e build/library/bitmap.c.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/library/bitmap.c.o
 .eh_frame      0x0000000000000000       0x50 build/library/bitmap.c.o
 .comment       0x0000000000000000       0x4e build/library/string.c.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/library/string.c.o
 .eh_frame      0x0000000000000000      0x150 build/library/string.c.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map


/DISCARD/
 *(.comment)
 *(.note.GNU-stack)
 *(.eh_frame)
 *(.comment)
 *(.note.GNU-stack)
 *(.eh_frame)
                0x0000000000100000                . = 0x100000
                0x0000000000100000                kernel_load_addr = .
                0x0000000000100000                text_start_addr = .

.text           0x0000000000100000     0x2b0f
                0x0000000000100000                kernel_text_start = .
 *(.boot)
 .boot          0x0000000000100000       0x29 build/boot/boot.asm.o
 *(.text*)
 *fill*         0x0000000000100029        0x7 90
 .text          0x0000000000100030        0x0 build/boot/boot.asm.o
 .text          0x0000000000100030      0x14f build/boot/init.asm.o
                0x0000000000100030                wheel_init
 *fill*         0x000000000010017f        0x1 90
 .text          0x0000000000100180      0xa07 build/kernel/main.c.o
                0x0000000000100180                raw_write
                0x0000000000100210                read_info
                0x00000000001003b0                wheel_main
 *fill*         0x0000000000100b87        0x9 90
 .text          0x0000000000100b90      0xb8c build/memory/page_alloc.c.o
                0x0000000000100b90                page_alloc_init
                0x0000000000101180                find_free_pages
                0x00000000001013c0                alloc_pages
                0x00000000001015a0                free_pages
 .text          0x000000000010171c        0x0 build/memory/virt_alloc.c.o
 *fill*         0x000000000010171c        0x4 90
 .text          0x0000000000101720      0x2ff build/library/bitmap.c.o
                0x0000000000101720                bitmap_set
                0x00000000001018a0                bitmap_clear
 *fill*         0x0000000000101a1f        0x1 90
 .text          0x0000000000101a20     0x10ef build/library/string.c.o
                0x0000000000101a20                strlen
                0x0000000000101b30                strcpy
                0x0000000000101ba0                strncpy
                0x0000000000101c50                memcpy
                0x0000000000101e40                memset
                0x0000000000102040                u32_to_str
                0x0000000000102170                u64_to_str
                0x00000000001022b0                i32_to_str
                0x0000000000102340                i64_to_str
                0x00000000001023d0                vsprintf
                0x0000000000102ab0                sprintf
                0x0000000000102b0f                kernel_text_end = .
                0x0000000000102b0f                kernel_text_start = .
 *(.boot)
 *(.text*)
                0x0000000000102b0f                kernel_text_end = .

.data           0x0000000000102b10      0x164
                0x0000000000102b10                kernel_data_start = .
 *(.rodata*)
 .rodata        0x0000000000102b10        0x8 build/kernel/main.c.o
 .rodata.str1.1
                0x0000000000102b18       0x70 build/kernel/main.c.o
 *fill*         0x0000000000102b88        0x8 00000000
 .rodata        0x0000000000102b90       0xa5 build/library/string.c.o
 *(.data*)
 *fill*         0x0000000000102c35        0x3 00000000
 .data          0x0000000000102c38       0x3a build/boot/init.asm.o
 *fill*         0x0000000000102c72        0x2 00000000
 .data          0x0000000000102c74        0x0 build/kernel/main.c.o
 .data          0x0000000000102c74        0x0 build/memory/page_alloc.c.o
 .data          0x0000000000102c74        0x0 build/memory/virt_alloc.c.o
 .data          0x0000000000102c74        0x0 build/library/bitmap.c.o
 .data          0x0000000000102c74        0x0 build/library/string.c.o
                0x0000000000102c74                kernel_data_end = .
                0x0000000000102c74                kernel_data_start = .
 *(.rodata*)
 *(.data*)
                0x0000000000102c74                kernel_data_end = .
                0x0000000000102c74                data_end_addr = .

.bss            0x0000000000103000     0x6004
                0x0000000000103000                kernel_bss_start = .
 *(COMMON)
 COMMON         0x0000000000103000      0x180 build/memory/page_alloc.c.o
                0x0000000000103000                buddy_num
                0x0000000000103040                buddy_map
                0x0000000000103080                buf
 *(.bss)
 *fill*         0x0000000000103180      0xe80 00000000
 .bss           0x0000000000104000     0x5000 build/boot/init.asm.o
                0x0000000000104000                kernel_stack
                0x0000000000105000                pml4t
 .bss           0x0000000000109000        0x4 build/kernel/main.c.o
                0x0000000000109000                line
 .bss           0x0000000000109004        0x0 build/memory/page_alloc.c.o
 .bss           0x0000000000109004        0x0 build/memory/virt_alloc.c.o
 .bss           0x0000000000109004        0x0 build/library/bitmap.c.o
 .bss           0x0000000000109004        0x0 build/library/string.c.o
                0x0000000000109004                kernel_bss_end = .
                0x0000000000109004                kernel_bss_start = .
 *(COMMON)
 *(.bss)
                0x0000000000109004                kernel_bss_end = .
                0x0000000000109004                bss_end_addr = .
                0x0000000000109004                kernel_end = .
LOAD build/boot/boot.asm.o
LOAD build/boot/init.asm.o
LOAD build/kernel/main.c.o
LOAD build/memory/page_alloc.c.o
LOAD build/memory/virt_alloc.c.o
LOAD build/library/bitmap.c.o
LOAD build/library/string.c.o
LOAD link.lds
                0x0000000000100000                . = 0x100000
                0x0000000000100000                kernel_load_addr = .
                0x0000000000100000                text_start_addr = .
                0x0000000000100000                data_end_addr = .
                0x0000000000100000                bss_end_addr = .
                0x0000000000100000                kernel_end = .
OUTPUT(build/kernel.bin binary)
